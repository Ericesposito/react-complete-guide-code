{"ast":null,"code":"var _jsxFileName = \"/Users/ericesposito/Dev/practice/udemy-courses/react-complete-guide/react-complete-guide-code/code/project-1/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from './components/Header/Header';\nimport UserInput from './components/UserInput/UserInput';\nimport ResultsTable from './components/ResultsTable/ResultsTable';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputData, setInputData] = useState(null);\n  console.log(inputData);\n  const calculateHandler = userInput => {\n    setInputData(userInput);\n  };\n  const yearlyData = []; // per-year results\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No content to display!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }, this);\n  if (inputData) {\n    let currentSavings = inputData['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = inputData['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = inputData['expected-return'] / 100;\n    const duration = inputData['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    content = /*#__PURE__*/_jsxDEV(ResultsTable, {\n      data: inputData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this);\n  }\n\n  // if (inputData.length > 0) {\n  //   content = <ResultsTable data={inputData} />;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      calculateHandler: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !inputData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No content to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this), inputData && /*#__PURE__*/_jsxDEV(ResultsTable, {\n      data: inputData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WB4YEqiXNP+eE4yHtiQkzNFflAw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","UserInput","ResultsTable","useState","jsxDEV","_jsxDEV","App","_s","inputData","setInputData","console","log","calculateHandler","userInput","yearlyData","content","children","fileName","_jsxFileName","lineNumber","columnNumber","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","data","_c","$RefreshReg$"],"sources":["/Users/ericesposito/Dev/practice/udemy-courses/react-complete-guide/react-complete-guide-code/code/project-1/01-starting-project/src/App.js"],"sourcesContent":["import Header from './components/Header/Header';\nimport UserInput from './components/UserInput/UserInput';\nimport ResultsTable from './components/ResultsTable/ResultsTable';\nimport { useState } from 'react';\n\nfunction App() {\n  const [inputData, setInputData] = useState(null);\n  console.log(inputData);\n\n  const calculateHandler = (userInput) => {\n    setInputData(userInput);\n  };\n\n  const yearlyData = []; // per-year results\n\n  let content = <p>No content to display!</p>;\n\n  if (inputData) {\n    let currentSavings = inputData['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = inputData['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = inputData['expected-return'] / 100;\n    const duration = inputData['duration'];\n  \n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n    content = <ResultsTable data={inputData} />;\n  }\n\n\n  // if (inputData.length > 0) {\n  //   content = <ResultsTable data={inputData} />;\n  // }\n\n  return (\n    <div>\n      <Header />\n      <UserInput calculateHandler={calculateHandler} />\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      {!inputData && <p>No content to display</p>}\n      {inputData && <ResultsTable data={inputData} />\n}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY,MAAM,wCAAwC;AACjE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChDO,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EAEtB,MAAMI,gBAAgB,GAAIC,SAAS,IAAK;IACtCJ,YAAY,CAACI,SAAS,CAAC;EACzB,CAAC;EAED,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;EAEvB,IAAIC,OAAO,gBAAGV,OAAA;IAAAW,QAAA,EAAG;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE3C,IAAIZ,SAAS,EAAE;IACb,IAAIa,cAAc,GAAGb,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACnD,MAAMc,kBAAkB,GAAGd,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC7D,MAAMe,cAAc,GAAGf,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IACzD,MAAMgB,QAAQ,GAAGhB,SAAS,CAAC,UAAU,CAAC;;IAEtC;IACA,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDR,UAAU,CAACa,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;IACAP,OAAO,gBAAGV,OAAA,CAACH,YAAY;MAAC4B,IAAI,EAAEtB;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;;EAGA;EACA;EACA;;EAEA,oBACEf,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACL,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVf,OAAA,CAACJ,SAAS;MAACW,gBAAgB,EAAEA;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGhD,CAACZ,SAAS,iBAAIH,OAAA;MAAAW,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC1CZ,SAAS,iBAAIH,OAAA,CAACH,YAAY;MAAC4B,IAAI,EAAEtB;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5C,CAAC;AAEV;AAACb,EAAA,CAjDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}