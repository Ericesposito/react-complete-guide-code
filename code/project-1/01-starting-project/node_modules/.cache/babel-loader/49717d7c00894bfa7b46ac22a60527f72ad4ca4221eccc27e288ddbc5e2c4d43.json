{"ast":null,"code":"var _jsxFileName = \"/Users/ericesposito/Dev/practice/udemy-courses/react-complete-guide/react-complete-guide-code/code/project-1/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from './components/Header/Header';\nimport UserInput from './components/UserInput/UserInput';\nimport ResultsTable from './components/ResultsTable/ResultsTable';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputData, setInputData] = useState([]);\n  console.log(inputData);\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    setInputData(yearlyData);\n    // do something with yearlyData ...\n  };\n\n  const yearlyData = []; // per-year results\n\n  let currentSavings = +inputData['current-savings']; // feel free to change the shape of this input object!\n  const yearlyContribution = +inputData['yearly-contribution']; // as mentioned: feel free to change the shape...\n  const expectedReturn = +inputData['expected-return'] / 100;\n  const duration = +inputData['duration'];\n\n  // The below code calculates yearly results (total savings, interest etc)\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution\n    });\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No content to display!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 17\n  }, this);\n  if (inputData.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(ResultsTable, {\n      data: inputData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      calculateHandler: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IKcQljemWEmJJz7BVkfMaDu2SHs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","UserInput","ResultsTable","useState","jsxDEV","_jsxDEV","App","_s","inputData","setInputData","console","log","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","data","_c","$RefreshReg$"],"sources":["/Users/ericesposito/Dev/practice/udemy-courses/react-complete-guide/react-complete-guide-code/code/project-1/01-starting-project/src/App.js"],"sourcesContent":["import Header from './components/Header/Header';\nimport UserInput from './components/UserInput/UserInput';\nimport ResultsTable from './components/ResultsTable/ResultsTable';\nimport { useState } from 'react';\n\nfunction App() {\n  const [inputData, setInputData] = useState([]);\n  console.log(inputData)\n\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    setInputData(yearlyData);\n    // do something with yearlyData ...\n  };\n\n  const yearlyData = []; // per-year results\n\n    let currentSavings = +inputData['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +inputData['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +inputData['expected-return'] / 100;\n    const duration = +inputData['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n  let content = <p>No content to display!</p>\n\n  if (inputData.length > 0) {\n    content = <ResultsTable data={inputData} />\n  }\n\n  return (\n    <div>\n      <Header />\n      <UserInput calculateHandler={calculateHandler}/>\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      {content}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY,MAAM,wCAAwC;AACjE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9CO,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EAEtB,MAAMI,gBAAgB,GAAIC,SAAS,IAAK;IACtC;IACA;IACAJ,YAAY,CAACK,UAAU,CAAC;IACxB;EACF,CAAC;;EAED,MAAMA,UAAU,GAAG,EAAE,CAAC,CAAC;;EAErB,IAAIC,cAAc,GAAG,CAACP,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;EACpD,MAAMQ,kBAAkB,GAAG,CAACR,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;EAC9D,MAAMS,cAAc,GAAG,CAACT,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;EAC1D,MAAMU,QAAQ,GAAG,CAACV,SAAS,CAAC,UAAU,CAAC;;EAEvC;EACA,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;IACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;IACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;IACrDF,UAAU,CAACO,IAAI,CAAC;MACd;MACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;MACXC,cAAc,EAAEA,cAAc;MAC9BG,gBAAgB,EAAER,cAAc;MAChCC,kBAAkB,EAAEA;IACtB,CAAC,CAAC;EACJ;EAEF,IAAIQ,OAAO,gBAAGnB,OAAA;IAAAoB,QAAA,EAAG;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE3C,IAAIrB,SAAS,CAACsB,MAAM,GAAG,CAAC,EAAE;IACxBN,OAAO,gBAAGnB,OAAA,CAACH,YAAY;MAAC6B,IAAI,EAAEvB;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;EAEA,oBACExB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACL,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA,CAACJ,SAAS;MAACW,gBAAgB,EAAEA;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAG/CL,OAAO;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACtB,EAAA,CA9CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}